@page "/newitem/{id:guid?}"
@using FuelStation.Blazor.Shared.Enums
@inject HttpClient httpClient
@inject IJSRuntime jsRuntime
@inject NavigationManager navManager
@inject ILocalStorageService localStorage


<h3 class="mb-5">New Item</h3>

<EditForm Model="@item" OnValidSubmit="@Save">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <div class="row">
        <div class="col-1">
             <label for="code" class="form-label">Code</label>
        </div>
        <div class="col-3">
            <InputText @bind-Value=item.Code name="code" class="form-control"  />
        </div>
    </div>
    <div class="row">
        <div class="col-1">
            <label for="description" class="form-label">Description</label>
        </div>
        <div class="col-3">
            <InputText @bind-Value=item.Description class="form-control" name="description"  />
        </div>
    </div>
    <div class="row">
        <div class="col-1">
            <label for="type" class="form-label">Type</label>
        </div>
        <div class="col-3">
            <InputSelect @bind-Value=item.ItemType class="form-control" name="type">
                @foreach(var type in Enum.GetValues(typeof(ItemType)))
                {
                    <option value="@type">@type</option>
                }
            </InputSelect>
        </div>
    </div>
    <div class="row">
        <div class="col-1">
            <label for="cost" class="form-label">Cost</label>
        </div>
        <div class="col-3">
            <InputNumber @bind-Value=item.Cost class="form-control" name="cost" />
        </div>
    </div>
    <div class="row">
        <div class="col-1">
            <label for="price" class="form-label">Price</label>
        </div>
        <div class="col-3">
            <InputNumber @bind-Value=item.Price class="form-control" name="price" />
        </div>
    </div>
    <div class="row">
        <div class="col-1">
            <button type="submit" class="btn btn-primary mt-3">Save</button>
        </div>
        <div class="col-1">
            <button class="btn btn-danger mt-3" @onclick="GoBack">Cancel</button>
        </div>
    </div>
</EditForm>

@code {
    [Parameter] public Guid? id { get; set; }
    private ItemViewModel item { get; set; } = new();

    protected override async Task OnInitializedAsync()
    {
        if(id is not null && Guid.Empty != id)
        {
            var authToken = await localStorage.GetItemAsStringAsync("authToken");
            httpClient.DefaultRequestHeaders.Authorization = new AuthenticationHeaderValue(authToken);
            item = await httpClient.GetFromJsonAsync<ItemViewModel>($"/item/active/{id}");
        }
    }

    private async void Save()
    {

    }

    private async void GoBack()
    {
        navManager.NavigateTo("/items");
    }

}