@page "/newemployee/{id:guid?}"
@using FuelStation.Blazor.Shared.Enums
@inject HttpClient httpClient
@inject IJSRuntime jsRuntime
@inject NavigationManager navManager
@inject ILocalStorageService localStorage


<h3 class="mb-5">New Employee</h3>

<EditForm Model="@employee" OnValidSubmit="@Save">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <div class="row">
        <div class="col-1">
             <label for="name" class="form-label">Name</label>
        </div>
        <div class="col-3">
            <InputText @bind-Value=employee.Name name="name" class="form-control" />
        </div>
    </div>
    <div class="row">
        <div class="col-1">
            <label class="form-label">SurName</label>
        </div>
        <div class="col-3">
            <InputText @bind-Value=employee.Surname class="form-control"  />
        </div>
    </div>
    <div class="row">
        <div class="col-1">
            <label for="type" class="form-label">Type</label>
        </div>
        <div class="col-3">
            <InputSelect @bind-Value=employee.EmployeeType class="form-control" name="type">
                @foreach(var type in Enum.GetValues(typeof(EmployeeType)))
                {
                     <option value="@type">@type</option>
                }
            </InputSelect>
        </div>
    </div>
    <div class="row">
        <div class="col-1">
            <label for="dateStart" class="form-label">Start Date</label>
        </div>
        <div class="col-3">
            <InputDate @bind-Value=employee.HireDateStart class="form-control" name="dateStart" />
        </div>
    </div>
    <div class="row">
        <div class="col-1">
            <label for="salary" class="form-label">Salary / Month</label>
        </div>
        <div class="col-3">
            <InputNumber @bind-Value=employee.SalaryPerMonth class="form-control" name="salary" />
        </div>
    </div>
    <div class="row">
        <div class="col-1">
            <button type="submit" class="btn btn-primary mt-3">Save</button>
        </div>
        <div class="col-1">
            <button class="btn btn-danger mt-3" @onclick="GoBack">Cancel</button>
        </div>
    </div>
</EditForm>

@code {
    [Parameter] public Guid? id { get; set; }
    private EmployeeViewModel employee { get; set; } = new();
    private Tools tools { get; set; } = new();
    
    protected override async Task OnInitializedAsync()
    {
        if(id is not null && Guid.Empty != id)
        {
            await tools.LoadAuthToken(httpClient, localStorage);
            employee = await httpClient.GetFromJsonAsync<EmployeeViewModel>($"/employee/active/{id}");
        }
    }

    private async void Save()
    {
        await tools.LoadAuthToken(httpClient, localStorage);
    }

    private async void GoBack()
    {
        navManager.NavigateTo("/employees");
    }

}
